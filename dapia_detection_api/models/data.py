from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from dapia_detection_api.models.base_model import Model
from dapia_detection_api.models.aircraft_types import AircraftTypes
from dapia_detection_api import util

from dapia_detection_api.models.aircraft_types import AircraftTypes  # noqa: E501

class Data(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, message=None, prediction=None, truth=None):  # noqa: E501
        """Data - a model defined in OpenAPI

        :param message: The message of this Data.  # noqa: E501
        :type message: object
        :param prediction: The prediction of this Data.  # noqa: E501
        :type prediction: AircraftTypes
        :param truth: The truth of this Data.  # noqa: E501
        :type truth: AircraftTypes
        """
        self.openapi_types = {
            'message': object,
            'prediction': AircraftTypes,
            'truth': AircraftTypes
        }

        self.attribute_map = {
            'message': 'message',
            'prediction': 'prediction',
            'truth': 'truth'
        }

        self._message = message
        self._prediction = prediction
        self._truth = truth

    @classmethod
    def from_dict(cls, dikt) -> 'Data':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The data of this Data.  # noqa: E501
        :rtype: Data
        """
        return util.deserialize_model(dikt, cls)

    @property
    def message(self) -> object:
        """Gets the message of this Data.

        An ADS-B message  # noqa: E501

        :return: The message of this Data.
        :rtype: object
        """
        return self._message

    @message.setter
    def message(self, message: object):
        """Sets the message of this Data.

        An ADS-B message  # noqa: E501

        :param message: The message of this Data.
        :type message: object
        """

        self._message = message

    @property
    def prediction(self) -> AircraftTypes:
        """Gets the prediction of this Data.


        :return: The prediction of this Data.
        :rtype: AircraftTypes
        """
        return self._prediction

    @prediction.setter
    def prediction(self, prediction: AircraftTypes):
        """Sets the prediction of this Data.


        :param prediction: The prediction of this Data.
        :type prediction: AircraftTypes
        """

        self._prediction = prediction

    @property
    def truth(self) -> AircraftTypes:
        """Gets the truth of this Data.


        :return: The truth of this Data.
        :rtype: AircraftTypes
        """
        return self._truth

    @truth.setter
    def truth(self, truth: AircraftTypes):
        """Sets the truth of this Data.


        :param truth: The truth of this Data.
        :type truth: AircraftTypes
        """

        self._truth = truth
