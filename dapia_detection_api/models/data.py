from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from dapia_detection_api.models.base_model import Model
from dapia_detection_api.models.aircraft_types import AircraftTypes
from dapia_detection_api import util

from dapia_detection_api.models.aircraft_types import AircraftTypes  # noqa: E501

class Data(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, messages=None, predictions=None, truths=None):  # noqa: E501
        """Data - a model defined in OpenAPI

        :param messages: The messages of this Data.  # noqa: E501
        :type messages: List[object]
        :param predictions: The predictions of this Data.  # noqa: E501
        :type predictions: List[AircraftTypes]
        :param truths: The truths of this Data.  # noqa: E501
        :type truths: List[AircraftTypes]
        """
        self.openapi_types = {
            'messages': List[object],
            'predictions': List[AircraftTypes],
            'truths': List[AircraftTypes]
        }

        self.attribute_map = {
            'messages': 'messages',
            'predictions': 'predictions',
            'truths': 'truths'
        }

        self._messages = messages
        self._predictions = predictions
        self._truths = truths

    @classmethod
    def from_dict(cls, dikt) -> 'Data':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The data of this Data.  # noqa: E501
        :rtype: Data
        """
        return util.deserialize_model(dikt, cls)

    @property
    def messages(self) -> List[object]:
        """Gets the messages of this Data.


        :return: The messages of this Data.
        :rtype: List[object]
        """
        return self._messages

    @messages.setter
    def messages(self, messages: List[object]):
        """Sets the messages of this Data.


        :param messages: The messages of this Data.
        :type messages: List[object]
        """

        self._messages = messages

    @property
    def predictions(self) -> List[AircraftTypes]:
        """Gets the predictions of this Data.


        :return: The predictions of this Data.
        :rtype: List[AircraftTypes]
        """
        return self._predictions

    @predictions.setter
    def predictions(self, predictions: List[AircraftTypes]):
        """Sets the predictions of this Data.


        :param predictions: The predictions of this Data.
        :type predictions: List[AircraftTypes]
        """

        self._predictions = predictions

    @property
    def truths(self) -> List[AircraftTypes]:
        """Gets the truths of this Data.


        :return: The truths of this Data.
        :rtype: List[AircraftTypes]
        """
        return self._truths

    @truths.setter
    def truths(self, truths: List[AircraftTypes]):
        """Sets the truths of this Data.


        :param truths: The truths of this Data.
        :type truths: List[AircraftTypes]
        """

        self._truths = truths
