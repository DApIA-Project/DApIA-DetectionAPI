from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from dapia_detection_api.models.base_model import Model
from dapia_detection_api import util


class Response500ClassifyAircraftResultInner(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, messages=None, error=None):  # noqa: E501
        """Response500ClassifyAircraftResultInner - a model defined in OpenAPI

        :param messages: The messages of this Response500ClassifyAircraftResultInner.  # noqa: E501
        :type messages: List[object]
        :param error: The error of this Response500ClassifyAircraftResultInner.  # noqa: E501
        :type error: str
        """
        self.openapi_types = {
            'messages': List[object],
            'error': str
        }

        self.attribute_map = {
            'messages': 'messages',
            'error': 'error'
        }

        self._messages = messages
        self._error = error

    @classmethod
    def from_dict(cls, dikt) -> 'Response500ClassifyAircraftResultInner':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The Response_500_Classify_Aircraft_result_inner of this Response500ClassifyAircraftResultInner.  # noqa: E501
        :rtype: Response500ClassifyAircraftResultInner
        """
        return util.deserialize_model(dikt, cls)

    @property
    def messages(self) -> List[object]:
        """Gets the messages of this Response500ClassifyAircraftResultInner.


        :return: The messages of this Response500ClassifyAircraftResultInner.
        :rtype: List[object]
        """
        return self._messages

    @messages.setter
    def messages(self, messages: List[object]):
        """Sets the messages of this Response500ClassifyAircraftResultInner.


        :param messages: The messages of this Response500ClassifyAircraftResultInner.
        :type messages: List[object]
        """

        self._messages = messages

    @property
    def error(self) -> str:
        """Gets the error of this Response500ClassifyAircraftResultInner.

        Error name found  # noqa: E501

        :return: The error of this Response500ClassifyAircraftResultInner.
        :rtype: str
        """
        return self._error

    @error.setter
    def error(self, error: str):
        """Sets the error of this Response500ClassifyAircraftResultInner.

        Error name found  # noqa: E501

        :param error: The error of this Response500ClassifyAircraftResultInner.
        :type error: str
        """

        self._error = error
